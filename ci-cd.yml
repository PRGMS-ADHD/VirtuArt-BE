name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1'

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

      - name: Upload production build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: production-build
          path: |
            dist
            package.json
            package-lock.json

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download production build artifacts
        uses: actions/download-artifact@v2
        with:
          name: production-build

      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          CORS_OPTION: ${{ secrets.CORS_OPTION }}
          APP_PORT: ${{ secrets.APP_PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
        run: |
          scp -r dist package.json package-lock.json ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/app
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/${{ secrets.SSH_USERNAME }}/app
            echo "MONGODB_URI=${MONGODB_URI}" > .env.production
            echo "JWT_SECRET=${JWT_SECRET}" >> .env.production
            echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> .env.production
            echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> .env.production
            echo "AWS_REGION=${AWS_REGION}" >> .env.production
            echo "AWS_S3_BUCKET=${AWS_S3_BUCKET}" >> .env.production
            echo "CORS_OPTION=${CORS_OPTION}" >> .env.production
            echo "APP_PORT=${APP_PORT}" >> .env.production
            echo "NODE_ENV=${NODE_ENV}" >> .env.production
            npm install --production
            pm2 restart all
          EOF
